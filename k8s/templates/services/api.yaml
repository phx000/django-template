apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: api
spec:
  replicas: {{ .Values.services.api.replicas }}
  selector:
    matchLabels:
      app: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: {{ .Values.image.name }}:{{ .Values.image.version }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ["gunicorn"]
          args: ["--bind", "0.0.0.0:8000", "backend.wsgi:application"]
          envFrom:
            - configMapRef:
                name: configmap
            - secretRef:
                name: secret
          ports:
            - containerPort: 8000
          resources:
            requests:
              memory: {{ .Values.services.api.requests.memory }}
              cpu: {{ .Values.services.api.requests.cpu }}
            limits:
              memory: {{ .Values.services.api.limits.memory }}
              cpu: {{ .Values.services.api.limits.cpu }}
          livenessProbe:
            httpGet:
              path: /api/healthz
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/readiness
              port: 8000
            initialDelaySeconds: 15 # api depends on queue
            periodSeconds: 30
            timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000