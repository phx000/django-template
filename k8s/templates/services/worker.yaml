apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: worker
spec:
  replicas: {{ .Values.services.worker.replicas }}
  selector:
    matchLabels:
      app: worker
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
        - name: worker
          image: {{ .Values.image.name }}:{{ .Values.image.version }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ["celery"]
          args: ["-A", "backend", "worker", "-l", "INFO"]
          envFrom:
            - configMapRef:
                name: configmap
            - secretRef:
                name: secret
          resources:
            requests:
              memory: {{ .Values.services.worker.requests.memory }}
              cpu: {{ .Values.services.worker.requests.cpu }}
            limits:
              memory: {{ .Values.services.worker.limits.memory }}
              cpu: {{ .Values.services.worker.limits.cpu }}
          livenessProbe:
            exec:
              command:
                - celery
                - -A
                - backend
                - status
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command:
                - celery
                - -A
                - backend
                - status
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 10