name: Deploy to Production

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up python (for workflow scripting)
      uses: actions/setup-python@v4
      with:
        python-version: "3.10.12"

    - name: Install helm
      uses: azure/setup-helm@v4.2.0

    - name: Determine deployment environment
      run: |
        deploy_env=$( [ "${{ github.ref_name }}" = "dev" ] && echo "dev" || echo "prod" )
        echo "DEPLOY_ENV=$deploy_env" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker image
      run: |
        IMAGE_NAME=registry.digitalocean.com/${{ vars.CONTAINER_REGISTRY }}/${{ vars.IMAGE_NAME }}
        IMAGE_VERSION=$DEPLOY_ENV-$(git rev-list --count HEAD)
        IMAGE_FULL_NAME="${IMAGE_NAME}:${IMAGE_VERSION}" 
        echo "IMAGE_FULL_NAME=$IMAGE_FULL_NAME" >> $GITHUB_ENV
                
        docker build -t "$IMAGE_FULL_NAME" -f ./docker/api/Dockerfile .
        
    - name: Convert ConfigMap into .env and inject secrets
      run: |
        helm template main ./k8s \
                  --values ./k8s/values-$DEPLOY_ENV.yaml \
                  --namespace $DEPLOY_ENV \
                  --show-only templates/configmap.json \
                  > ./.github/_configmap_output.json
        python ./.github/configmap_to_env_file.py
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> ./.github/_configmap.env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> ./.github/_configmap.env

    - name: Run tests
      run: |
        docker run --name api --env-file ./.github/_configmap.env $IMAGE_FULL_NAME python manage.py test

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_TOKEN }}

    - name: Push image
      run: |
        doctl registry login
        docker push $IMAGE_FULL_NAME

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: "v1.32.0"

    - name: Authenticate in cluster
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ vars.CLUSTER_NAME }}

    - name: Upgrade Helm Chart
      run: |
        helm upgrade --install main ./k8s \
          --namespace $DEPLOY_ENV \
          --set image.version=$IMAGE_VERSION \
          --wait